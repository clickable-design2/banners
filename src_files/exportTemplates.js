var domContent = document.getElementById('canvasBox').innerHTML,
    customStyles = document.getElementById('custom_styles').innerHTML,
    adwiseTemplate, mixtraffTemplate, googleTemplate, adFoxTemplate;

window.exScript;

window.exportSize = {
    w: lib.properties.width,
    h: lib.properties.height
}

getEL('#script > script', function(e){
    exScript = e.innerHTML;
});

var respOption = '  var p = window.devicePixelRatio,\n'
+ '                    scaleW = sScale.iw / bannerS.w,\n'
+ '                    scaleY = sScale.ih / bannerS.h,\n'
+ '                    scaleWY = scaleW * scaleY,\n'
+ '                    scaleCanvas;\n'
+ '                stage.scaleX = stage.scaleY = p;\n'
+ '                if(sScale.iw < bannerS.w){scaleCanvas = scaleW;}\n'
+ '                else if(sScale.ih < bannerS.h){scaleCanvas = scaleY;}\n'
+ '                else if(sScale.iw < bannerS.w && sScale.ih < bannerS.h){scaleCanvas = scaleWY;}\n'
+ '                else {scaleCanvas = 1;}\n'
+ '                var middleX = (sScale.iw / 2) - ((bannerS.w * ((contentPreferences.reScale) ? scaleCanvas : 1)) / 2),\n'
+ '                    middleY = (sScale.ih / 2) - ((bannerS.h * ((contentPreferences.reScale) ? scaleCanvas : 1)) / 2);\n'
+ '                function cSizePos(scale, width, height){\n'
+ '                    canvas.width = width * p; canvas.height = height * p;\n'
+ '                    canvasBox.style.width = width * ((contentPreferences.reScale) ? scale : 1) + "px";\n'
+ '                    canvasBox.style.height = height * ((contentPreferences.reScale) ? scale : 1) + "px";\n'
+ '                    canvasBox.style.left = ((contentPreferences.horizontalMiddle) ? middleX : 0) + "px";\n'
+ '                    canvasBox.style.top = ((contentPreferences.verticalMiddle) ? middleY : 0) + "px";;\n'
+ '                }\n'
+ '                cSizePos(scaleCanvas, bannerS.w, bannerS.h);\n'
+ '            }\n'
+ '            window.addEventListener("resize", SetCanvas);\n';

var noneResp = '   var p = window.devicePixelRatio;\n'
+ '                canvas.width = bannerS.w * p; canvas.height = bannerS.h * p;\n'
+ '                canvasBox.style.width = bannerS.w + "px";\n'
+ '                canvasBox.style.height = bannerS.h + "px";\n'
+ '                canvasBox.style.left = 0 + "px";\n'
+ '                canvasBox.style.top = 0 + "px";\n'
+ '            }\n';

window.refreshTemplates = function(){
    
    /*Preview*/
    previewTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <script>\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script src="https://code.createjs.com/createjs-2015.11.26.min.js"></script>\n'
    + '        <script src="index.js"></script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
    
    /*Adwise Agency*/
    adwiseTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <script>\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script src="/js/html5js/createjs-2015.11.26.min.js"></script>\n'
    + '        <script src="index.js"></script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '                canvasBox.addEventListener("click", function(){window.open(clickTAG, "_blank");});\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
    
    /*MixTraff*/
    mixtraffTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <script>\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            var MixTAG = "{REDIRECT_URL}";\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script src="https://mxtads.com/cd-js/createjs-2015.11.26.min.js"></script>\n'
    + '        <script src="index.js"></script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '                canvasBox.addEventListener("click", function(){window.open(MixTAG, "_blank");});\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
    
    /*Rambler*/
    adFoxTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <script>\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script type="text/javascript" src="//banners.adfox.ru/files/adfox_HTML5.js"></script>\n'
    + '        <script src="https://code.createjs.com/createjs-2015.11.26.min.js"></script>\n'
    + '        <script>' + exScript + '</script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        var flashVars = {\n'
    + '           reference: "%reference%",\n'
    + '           link: "%user1%",\n'
    + '           target: "%target%",\n'
    + '           rnd: parseInt("%random1%") || parseInt("%random%"),\n'
    + '           events: [ "", "%event1%", "%event2%", "%event3%", "%event4%", "%event5%", "%event6%", "%event7%", "%event8%", "%event9%", "%event10%", "%event11%", "%event12%", "%event13%", "%event14%", "%event15%", "%event16%", "%event17%", "%event18%", "%event19%", "%event20%", "%event21%", "%event22%", "%event23%", "%event24%", "%event25%", "%event26%", "%event27%", "%event28%", "%event29%", "%event30%"]\n'
    + '         };\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '                canvasBox.addEventListener("click", function(){window.callClick();});\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
    
    /*Google AdWords*/
    googleTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <meta name="ad.size" content="width=' + bannerS.w + ',height=' + bannerS.h + '">\n'
    + '        <script>\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script src="https://s0.2mdn.net/ads/studio/cached_libs/createjs_2015.11.26_54e1c3722102182bb133912ad4442e19_min.js"></script>\n'
    + '        <script src="index.js"></script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '                canvasBox.addEventListener("click", function(){window.open(clickTAG, "_blank");});\n'
    + '                setTimeout(function(){createjs.Ticker.removeEventListener("tick", stage); }, 30000);\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
    
    /*Mobster Agency*/
    mobsterTemplate = '<!DOCTYPE html>\n'
    + '<html>\n'
    + '    <head>\n'
    + '        <meta charset="UTF-8">\n'
    + '        <meta name="viewport" content="width=device-width, initial-scale=1">\n'
    + '        <script>\n'
    + '            var getAdHash = function() {\n'
    + '                var adHash = "%AD_HASH%";\n'
    + '                var res = window.location.search.match(/hash=([a-f\d]{32})/);\n'
    + '                if(res) {\n'
    + '                    adHash = res[1];\n'
    + '                }\n'
    + '                return adHash;\n'
    + '            }\n'
    + '            var canvas, stage, exportRoot, fnStartAnimation, imgSrc, sScale;\n'
    + '            window.images = {};\n'
    + '            function getWindowSize() {\n'
    + '                return {\n'
    + '                    iw: Math.min(document.documentElement.clientWidth, window.innerWidth || 0),\n'
    + '                    ih: Math.min(document.documentElement.clientHeight, window.innerHeight || 0),\n'
    + '                }\n'
    + '            }\n'
    + '            window.contentPreferences = ' + JSON.stringify(contentPreferences) + '\n'
    + '            imgSrc = ' + JSON.stringify(exportManifest) + '\n'
    + '            function setImg(id, path) {\n'
    + '                var img = new Image();\n'
    + '                img.src = path;\n'
    + '                images[id] = img;\n'
    + '            }\n'
    + '            for (i = 0; i < imgSrc.length; i++) { \n'
    + '                var data = imgSrc[i];\n'
    + '                setImg(data.id, data.src);\n'
    + '            }\n'
    + '        </script>\n'
    + '        <script src="/js/html5js/createjs-2015.11.26.min.js"></script>\n'
    + '        <script src="index.js"></script>\n'
    + '        <style>\n'
    + '            body, #scene{overflow: hidden;}\n'
    + '            #scene, canvas, #apearBox, #canvasBox > div {\n'
    + '                position: absolute;\n'
    + '                width: 100%; height: 100%;\n'
    + '                top: 0; left: 0;\n'
    + '            }\n'
    + '            #apearBox{\n'
    + '                transition-duration: 500ms;\n'
    + '                -webkit-transition-duration: 500ms;\n'
    + '            }\n'
    + '            #canvasBox {position: absolute;}\n'
    + '            .add {opacity: 1;}\n'
    + '            .remove {opacity: 0;}\n'
    + '        </style>\n'
    + '        <style>' + customStyles + '</style>\n'
    + '    </head>\n'
    + '    <body onload="init();">\n'
    + '        <div id="apearBox" class="remove">\n'
    + '            <div id="scene">\n'
    + '                <div id="canvasBox">' + domContent + '</div>\n'
    + '            </div>\n'
    + '        </div>\n'
    + '    </body>\n'
    + '    <script>\n'
    + '        function init() {\n'
    + '            canvasBox = document.getElementById("canvasBox");\n'
    + '            canvas = document.getElementById("canvas");\n'
    + '            apearBox = document.getElementById("apearBox");\n'
    + '            handleComplete();\n'
    + '        }\n'
    + '        function handleComplete(evt) {\n'
    + '            exportRoot = new lib.index();\n'
    + '            stage = new createjs.Stage(canvas);\n'
    + '            stage.addChild(exportRoot);	\n'
    + '            fnStartAnimation = function() {\n'
    + '                createjs.Ticker.setFPS(lib.properties.fps);\n'
    + '                createjs.Ticker.addEventListener("tick", stage);\n'
    + '                apearBox.classList.remove("remove");\n'
    + '		           apearBox.classList.add("add");\n'
    + '                canvasBox.addEventListener("click", function(){window.parent.postMessage("_MRMN.click." + getAdHash(), "*");});\n'
    + '            }\n'
    + '            SetCanvas = function() {\n'
    + '            sScale = getWindowSize();\n'
    + '            window.bannerS = { w: ' + exportSize.w + ', h: ' + exportSize.h + '}\n'
    + '            ' + ((setResp) ? respOption : noneResp) + ''
    + '            SetCanvas();\n'
    + '            fnStartAnimation();\n'
    + '        }\n'
    + '    </script>\n'
    + '</html>\n';
}